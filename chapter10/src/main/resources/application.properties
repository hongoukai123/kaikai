#端口号
server.port=8012

#数据库配置
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/chapter8
spring.datasource.username=root
spring.datasource.password=root

spring.datasource.tomcat.max-idle=10
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-wait=10000
spring.datasource.tomcat.initial-size=5
#设置默认的隔离级别为读写提交
spring.datasource.tomcat.default-transaction-isolation=2

#mybatis配置
mybatis.mapper-locations=classpath:mapping/*.xml
mybatis.type-aliases-package=com.kai.chap.pojo

#日志配置DEBUG级别，这样日志最为详细
logging.level.root=DEBUG
logging.level.org.springframework=DEBUG
logging.level.org.org.mybatis=DEBUG


#配置redis
#配置redis连接池属性
spring.redis.jedis.pool.min-idle=5
spring.redis.jedis.pool.max-active=10
spring.redis.jedis.pool.max-idle=10
spring.redis.jedis.pool.max-wait=2000
#配置redis服务器属性
spring.redis.port=6379
spring.redis.host=127.0.0.1
spring.redis.password=
#redis连接超时时间
spring.redis.timeout=1000

#配置Redis缓存管理器
spring.cache.type=redis
spring.cache.cache-names=redisCache
#重置redis缓存管理器
#禁用前缀
spring.cache.redis.use-key-prefix=false
#允许保存空置
#spring.cache.redis.cache-null-values=true
#自定义前缀
#spring.cache.redis.key-prefix=
#定义超时时间，单位毫秒(设置600000代表十分钟后Redis的键就会超时，就无法从redis中读取数据了，只能重新从数据库读取)
spring.cache.redis.time-to-live=600000
